# -*- coding: utf-8 -*-
"""Bancos_aula_1_estados.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aEiWvmCT3yXOjzoLcfzK808OHxWyT5XE
"""

import sqlite3
import pandas as pd

import sqlite3

# Conectando-se a um banco de dados em memória
conn = sqlite3.connect(':memory:')

# Criando uma tabela de exemplo
create_table_query = '''
CREATE TABLE usuarios (
    id INTEGER PRIMARY KEY,
    nome TEXT,
    idade INTEGER
)
'''
conn.execute(create_table_query)

# Inserindo dados na tabela
insert_query = 'INSERT INTO usuarios (nome, idade) VALUES (?, ?)'
usuarios_data = [('Alice', 25), ('Bob', 30), ('Carol', 28)]
conn.executemany(insert_query, usuarios_data)

# Realizando consultas
select_query = 'SELECT * FROM usuarios'
result = conn.execute(select_query).fetchall()
print(result)

# Fechando a conexão
conn.close()

# Realizando consultas

select_query = 'SELECT * FROM estados'
result = conn.execute(select_query).fetchall()
pd.DataFrame(result)

# Conectando-se a um banco de dados em memória

drop_table_query = '''
DROP TABLE estados;
'''
conn.execute(drop_table_query)

# Conectando-se ao banco de dados (assumindo que a conexão já foi estabelecida)
conn = sqlite3.connect(':memory:')

# Consulta para criar a tabela e inserir dados
select_query = """
DROP TABLE IF EXISTS estados;

CREATE TABLE estados (
    uf TEXT PRIMARY KEY,
    nome TEXT NOT NULL UNIQUE
);

INSERT INTO estados (uf, nome) VALUES
    ('AC', 'Acre'),
    ('AL', 'Alagoas'),
    ('AP', 'Amapá'),
    ('AM', 'Amazonas'),
    ('BA', 'Bahia'),
    ('CE', 'Ceará'),
    ('DF', 'Distrito Federal'),
    ('ES', 'Espírito Santo'),
    ('GO', 'Goiás'),
    ('MA', 'Maranhão'),
    ('MT', 'Mato Grosso'),
    ('MS', 'Mato Grosso do Sul'),
    ('MG', 'Minas Gerais'),
    ('PA', 'Pará'),
    ('PB', 'Paraíba'),
    ('PR', 'Paraná'),
    ('PE', 'Pernambuco'),
    ('PI', 'Piauí'),
    ('RJ', 'Rio de Janeiro'),
    ('RN', 'Rio Grande do Norte'),
    ('RS', 'Rio Grande do Sul'),
    ('RO', 'Rondônia'),
    ('RR', 'Roraima'),
    ('SC', 'Santa Catarina'),
    ('SP', 'São Paulo'),
    ('SE', 'Sergipe'),
    ('TO', 'Tocantins');
"""

# Executando a consulta
conn.executescript(select_query)

# Consulta para buscar dados
query = 'SELECT * FROM estados'
result = conn.execute(query).fetchall()
df = pd.DataFrame(result, columns=["uf", "nome"])
df

# Realizando consultas
select_query = 'SELECT * FROM estados ORDER BY "UF"'
result = conn.execute(select_query).fetchall()
pd.DataFrame(result)

# Realizando consultas
select_query = 'SELECT COUNT(*) FROM estados'
result = conn.execute(select_query).fetchall()
pd.DataFrame(result)

# Conectando-se ao banco de dados (assumindo que a conexão já foi estabelecida)
conn = sqlite3.connect(':memory:')

# Consulta para criar a tabela e inserir dados
select_query = """
DROP TABLE IF EXISTS estados;

CREATE TABLE cidades (
    uf TEXT NOT NULL,
    nome TEXT NOT NULL,
    latitude TEXT NOT NULL,
    longitude TEXT NOT NULL,
    latitude_longitude TEXT AS (longitude || '_' || latitude) UNIQUE,
    FOREIGN KEY(uf) REFERENCES estados(uf)
);

INSERT INTO cidades (uf, nome, latitude, longitude) VALUES
    ('PR', 'Curitiba', '-25.4284', '-49.2733'),
    ('PR', 'Colombo', '-25.2931', '-49.2233'),
    ('SP', 'São Paulo', '-23.5489', '-46.6388'),
    ('RJ', 'Rio de Janeiro', '-22.9035', '-43.2096'),
    ('SC', 'Florianópolis', '-27.5969', '-48.5495')
"""

# Executando a consulta
conn.executescript(select_query)

# Consulta para buscar dados
query = 'SELECT * FROM cidades'
result = conn.execute(query).fetchall()
df = pd.DataFrame(result, columns=["uf", "nome", 'latitude', 'longitude', 'latitude_longitude'])
df

# Conectando-se ao banco de dados (assumindo que a conexão já foi estabelecida)
conn = sqlite3.connect(':memory:')

# Consulta para criar a tabela e inserir dados
select_query = """
DROP TABLE IF EXISTS pessoas;

CREATE TABLE pessoas (
    cpf TEXT PRIMARY KEY,
    nome TEXT NOT NULL,
    idade TEXT NOT NULL
);

INSERT INTO pessoas (cpf, nome, idade) VALUES (1234, 'Ana Beatriz', 26);
INSERT INTO pessoas (cpf, nome, idade) VALUES (5678, 'Bruno Silva', 30);
INSERT INTO pessoas (cpf, nome, idade) VALUES (9101, 'Carlos Oliveira', 40);

"""

# Executando a consulta
conn.executescript(select_query)

# Consulta para criar a tabela e inserir dados
select_query = """
DELETE FROM pessoas;
"""


# Executando a consulta
conn.executescript(select_query)

# Consulta para buscar dados
query = 'SELECT * FROM pessoas'
result = conn.execute(query).fetchall()
df = pd.DataFrame(result, columns=["cpf", "nome", 'idade'])
df

# Conectando-se ao banco de dados (assumindo que a conexão já foi estabelecida)
conn = sqlite3.connect(':memory:')

# Consulta para criar a tabela e inserir dados
select_query = """

DELETE FROM pessoas

"""

# Executando a consulta
conn.executescript(select_query)

# Conectando-se ao banco de dados (assumindo que a conexão já foi estabelecida)
conn = sqlite3.connect(':memory:')

# Consulta para criar a tabela e inserir dados
select_query = """
DROP TABLE IF EXISTS pessoas;


CREATE TABLE pessoas(
    cpf INT PRIMARY KEY,
    nome TEXT NOT NULL UNIQUE,
    idade INT
);

INSERT INTO pessoas (cpf, nome, idade) VALUES (1234, 'Ana Beatriz', 26);
INSERT INTO pessoas (cpf, nome) VALUES (5678, 'Bruno Silva');
"""

# Executando a consulta
conn.executescript(select_query)

# Consulta para buscar dados
query = 'SELECT * FROM pessoas'
result = conn.execute(query).fetchall()
df = pd.DataFrame(result, columns=["cpf", "nome", 'idade'])
df

